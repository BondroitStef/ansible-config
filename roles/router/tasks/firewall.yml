---
- name: Install ufw (Uncomplicated FireWall)
  yum:
    name: ufw
    state: latest
    update_cache: yes

- name: Copy ufw defaults
  copy:
    src: firewall/default/ufw.conf
    dest: /etc/default/ufw.conf
  notify: 'reset firewall'

- name: Copy ufw configurations
  copy:
    src: firewall/ufw/
    dest: /etc/ufw/
  notify: 'reset firewall'

- name: Stop and disable firewalld
  service:
    name: firewalld
    state: stopped
    enabled: no

# Reset to delete old, removed rules
- name: Enable and reset ufw
  ufw:
    state: "{{ item }}"
  with_items:
    - enabled
    - reset

# Specify the rules in vars/firewall_rules.yml
- name: Configuring port/protocol/network rules
  ufw:
    delete: "{{ item.delete | default(omit) }}"
    direction: "{{ item.direction | default(omit) }}"
    from_ip: "{{ item.from_ip | default(omit) }}"
    from_port: "{{ item.from_port | default(omit) }}"
    insert: "{{ item.insert | default(omit) }}"
    interface: "{{ item.interface | default(omit) }}"
    log: "{{ item.log | default(omit) }}"
    logging: "{{ item.logging | default(omit) }}"
    name: "{{ item.name | default(omit) }}"
    policy: "{{ item.policy | default(omit) }}"
    port: "{{ item.port | default(omit) }}"
    proto: "{{ item.proto | default(omit) }}"
    rule: "{{ item.rule | default('allow') }}"
    to_ip: "{{ item.to_ip | default(omit) }}"
    to_port: "{{ item.to_port | default(omit) }}"
  with_items: "{{ ufw_rules }}"
  notify: 'restart firewall'

- name: Configuring application rules
  ufw:
    name: "{{ item.name }}"
    rule: "{{ item.rule if item.rule is defined else 'allow' }}"
  with_items: "{{ ufw_applications }}"
  notify: 'restart firewall'

- name: Enable and start ufw service
  service:
    name: ufw
    state: started
    enabled: yes

