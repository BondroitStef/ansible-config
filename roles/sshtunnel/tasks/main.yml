---
- name: Installation
  include: "{{ ansible_distribution }}.yml"
  tags:
    - install

- name: Make sure local user exists
  user:
    name: "{{ sshtunnel_local_user }}"
    home: "{{ sshtunnel_local_home }}"
    createhome: yes
    generate_ssh_key: yes
    ssh_key_bits: 4096
    shell: /sbin/nologin
    system: yes
  register: local_user

- debug:
    var: local_user

- name: Make sure remote user exists
  user:
    name: "{{ sshtunnel_remote_user }}"
    home: "{{ sshtunnel_remote_home }}"
    createhome: yes
    system: yes
    shell: /bin/sh
  delegate_to: "{{ sshtunnel_remote_host }}"

- name: Place public key in authorized_keys of remote machine
  authorized_key:
    user: "{{ sshtunnel_remote_user }}"
    key: "{{ local_user.ssh_public_key }}"
  delegate_to: "{{ sshtunnel_remote_host }}"

- name: Read public key of remote machine
  slurp:
    src: /etc/ssh/ssh_host_ecdsa_key.pub
  register: remote_host
  delegate_to: "{{ sshtunnel_remote_host }}"

- name: Place host public key in known_hosts
  known_hosts:
    path: "{{ sshtunnel_local_home }}/.ssh/known_hosts"
    name: "{{ sshtunnel_remote_url }}"
    key: "{{ sshtunnel_remote_url }} {{ remote_host.content | b64decode }}"

- name: Copy the ssh configuration file
  template:
    src: config
    dest: "{{ sshtunnel_local_home }}/.ssh/config"
    owner: "{{ sshtunnel_local_user }}"
    group: "{{ sshtunnel_local_user }}"
  notify: Restart sshtunnel

- name: Copy systemd unit
  template:
    src: sshtunnel.service
    dest: /etc/systemd/system/
  register: systemd_unit
  notify: Restart sshtunnel

- name: Give the user sudo permission if priviliged (and remove if not)
  lineinfile:
    dest: /etc/sudoers
    state: "{{ 'present' if sshtunnel_priviliged else 'absent' }}"
    regexp: "{{ sshtunnel_local_user }} ALL="
    line: "{{ sshtunnel_local_user }} ALL=(ALL) NOPASSWD: {{ sshtunnel_command }}"

- name: Reload systemd daemon if needed
  command: systemctl daemon-reload
  when: systemd_unit.changed

- name: Start and enable the tunnel
  service:
    name: sshtunnel
    state: started
    enabled: yes



